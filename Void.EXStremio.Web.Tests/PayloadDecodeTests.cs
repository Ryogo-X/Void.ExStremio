using System.Text;
using System.Text.RegularExpressions;

namespace Void.EXStremio.Web.Tests {
    public class PayloadDecodeTests {
        readonly string[] payloads = new string[] {
            @"#hWzM2MHBdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzM4ZTJiZjkwYTNlMDBkNTQyZWM5NGUzM2RiODEwNzk4OjIwMjQwMTAzMDI6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGpsWVFWSldVbW8wZEdoaGJWZE1aV1JtZVRkamRWRTlQUT09LzkvOC8zLzcvOS81L3QwZHNjLm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvMzhlMmJmOTBhM2UwMGQ1NDJlYzk0ZTMzZGI4MTA3OTg6MjAyNDAxMDMwMjpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkamxZUVZKV1VtbzBkR2hoYlZkTVpXUm1lVGRqZFZFOVBRPT0vOS84LzMvNy85LzUvdDBkc2MubXA0LFs0ODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9kNGJlYjBiMjdjN2QzODEwMGNiM2IzNjZjMjVkZGUyOToyMDI0MDEwMzAyOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRqbFlRVkpXVW1vMGRHaGhiVmRNWldSbWV//_//JCQjISF//_//IyMjI14hISMjIUBAAIyFAIyM=UZGpkVkU5UFE9PS85LzgvMy83LzkvNS85Mmp3di5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2Q0YmViMGIyN2M3ZDM4MTAwY2IzYjM2NmMyNWRkZTI5OjIwMjQwMTAzMDI6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGpsWVFWSldVbW8wZEdoaGJWZE1aV1JtZVRkamRWRTlQUT09LzkvOC8zLzcvOS81Lzkyand2Lm1wNCxbNzIwcF1odHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvOWU1YWU2ZTgwYWY0OGFkZGYyZDlhZTc3MWZmZDc0NDA6MjAyNDAxMDMwMjpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkamxZUVZKV1VtbzBkR2hoYlZkTVpXUm1lVGRqZFZFOVBRPT0vOS84LzMvNy85LzUvbnRpcDIubXA0OmhsczptYW5pZmVzdC5tM3U4IG9yIGh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy85ZTVhZTZlODBhZjQ//_//QEBAQEAhIyMhXl5e4YWRkZjJkOWFlNzcxZmZkNzQ0MDoyMDI0MDEwMzAyOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRqbFlRVkpXVW1vMGRHaGhiVmRNWldSbWVUZGpkVkU5UFE9PS85LzgvMy83LzkvNS9udGlwMi5tcDQsWzEwODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9jZjdlNzhiYjA2NmNiOGRiMTVkOWZmMmZhOTlkMWI0YjoyMDI0MDEwMzAyOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRqbFlRVkpXVW1vMGRHaGhiVmRNWldSbWVUZGpkVkU5UFE9PS85LzgvMy83LzkvNS9taHJoby5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2NmN2U3OGJiMDY2Y2I4ZGIxNWQ5ZmYyZmE5OWQxYjRiOjIwMjQwMTAzMDI6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGpsWVFWSldVbW8wZEdoaGJWZE1aV1JtZVRkamRWRTlQUT09LzkvOC8zLzcvOS81L21ocmhvLm1wNCxbMTA4MHAgVWx0cmFdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2NmN2U3OGJiMDY2Y2I4ZGIxNWQ5ZmYyZmE5OWQxYjRiOjIwMjQwMTAzM//_//JCQhIUAkJEBeIUAjJCRADI6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGpsWVFWSldVbW8wZEdoaGJWZE1aV1JtZVRkamRWRTlQUT09LzkvOC8zLzcvOS81L21ocmhvLm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvY2Y3ZTc4YmIwNjZjYjhkYjE1ZDlmZjJmYTk5ZDFiNGI6MjAyNDAxMDMwMjpXRVU0VUhCMlRGVnpSMGg1UWpaTVN//_//Xl5eIUAjIyEhIyM=tNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkamxZUVZKV1VtbzBkR2hoYlZkTVpXUm1lVGRqZFZFOVBRPT0vOS84LzMvNy85LzUvbWhyaG8ubXA0",
            @"WzM2MHBdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzQ2NWYxNzAwODM1NGFiM2U2YmM4NmViMzNhZDZjYjgxOjIwMjQwMTAzMDA6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5GdlMydDFWVzVZTjAxU01FRlhjRWhHZVZCbVJIYzlQUT09LzgvOS8xLzMvNy9rd2JjaS5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzQ2NWYxNzAwODM1NGFiM2U2YmM4NmViMzNhZDZjYjgxOjIwMjQwMTAzMDA6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5GdlMydDFWVzVZTjAxU01FRlhjRWhHZVZCbVJIYzlQUT09LzgvOS//_///_//QEBAQEAhIyMhXl5e/IyMjI14hISMjIUBA8xLzMvNy9rd2JjaS5tcDQsWzQ4MHBdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzEyMjJkZjA2N2E2N2VlMWNlNWEyMTU5MWY2NGRmZTk4OjIwMjQwMTAzMDA6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5GdlMydDFWVzVZTjAxU01FRlhjRWhHZVZCbVJIYzlQUT09LzgvOS8xLzMvNy9hdHMzby5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzEyMjJkZjA2N2E2N2VlMWNlNWEyMTU5MWY2NGRmZTk4OjIwMjQwMTAzMDA6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5GdlMydDFWVzVZTjAxU01FRlhjRWhHZVZCbVJIYzlQUT09LzgvOS8xLzMvNy9hdHMzby5tcDQsWzcyMHBdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzc1YjI0Y2JiZTIzM2MzMDY2MjdmOTI4MjdmNGE4YWZjOjIwMjQwMTAzMDA6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5GdlMydDFWVzVZTjAxU01FRlhjRWhHZVZCbVJIYzlQUT09LzgvOS8xLzMvNy9nY3d2ci5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzc1YjI0Y2JiZTIzM2MzMDY2MjdmOTI4MjdmNGE4YWZjOjIwMjQwMTAzMDA6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5GdlMydDFWVzVZTjAxU01FRlhjRWhHZVZCbVJIYzlQUT09LzgvOS8xLzMvNy9nY3d2ci5tcDQsWzEwODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9kZDhjYmQyODFlZjBlMTIzMDFlMDhhMmZmMTFhN2NhMDoyMDI0MDEwMzAwOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRuRnZTMnQxVlc1WU4wMVNNRUZYY0VoR2VWQm1SSGM5UFE9PS84LzkvMS8zLzcvMmNudngubXA0OmhsczptYW5pZmVzdC5tM3U4IG9yIGh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9kZDhjYmQyODFlZjBlMTIzMDFlMDhhMmZmMTFhN2NhMDoyMDI0MDEwMzAwOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRuRnZTMnQxVlc1WU4wMVNNRUZYY0VoR2VWQm1SSGM5UFE9PS84LzkvMS8zLzcvMmNudngubXA0LFsxMDgwcCBVbHRyYV1odHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvZGQ4Y2JkMjgxZWYwZTEyMzAxZTA4YTJmZ//_//JCQjISFAIyFAIyM=jExYTdjYTA6MjAyNDAxMDMwMDpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbW//_//JCQhIUAkJEBeIUAjJCRAsyT0hoTWJraE1jR2hUYVdsbGVHOXhkbkZ2UzJ0MVZXNVlOMDFTTUVGWGNFaEdlVkJtUkhjOVBRPT0vOC85LzEvMy83LzJjbnZ4Lm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvZGQ4Y2JkMjgxZWYwZTEyMzAxZTA4YTJmZjExYTdjYTA6MjAyNDAxMDMwMDpXRVU0VUhCMlRGVnpSMGg1U//_//Xl5eIUAjIyEhIyM=WpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkbkZ2UzJ0MVZXNVlOMDFTTUVGWGNFaEdlVkJtUkhjOVBRPT0vOC85LzEvMy83LzJjbnZ4Lm1wNA==",
            @"#hWzM2MHBdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzFkMzBhMjRlYzBiOGI4MDBjNDgyODVkZDFjMDA4NmJlOjIwMjQwMTAzMDE6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1//_//JCQjISFAIyFAIyM=ia2hNY0doVGFXbGxlRzl4ZGtWUlR6WkRZbk5rVldsU2NFRmpZa2hCZUVSUU9VRTlQUT09LzMvMS8yLzcvNy83LzBkdjk3Lm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvMWQzMGEyNGVjMGI4YjgwMGM0ODI4NWRkMWMwMDg2YmU6MjAyNDAxMDMwMTpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhka1ZSVHpaRFluTmtWV2xTY0VGallraEJlRVJRT1VFOVBRPT0vMy8xLzIvNy83LzcvMGR2OTcubXA0LFs0ODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9jYTBiMzFiZmFkODgzZWI2ZmI4N2Q3OGUyMDAwOGIzNjoyMDI0MDEwMzAxOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRrVlJUelpEWW5Oa1ZXbFNjRUZqWWtoQmVFUlFPVUU5UFE9PS8zLzEvMi83LzcvNy81em0yaS5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2NhMGIzMWJmYWQ4ODNlYjZmYjg3ZDc4ZTIwMDA4YjM2OjIwMjQwMTAzMDE6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGtWUlR6WkRZbk5rVldsU2NFRmpZa2hCZUVSUU9VRTlQUT09LzMvMS8yLzcvNy83LzV6bTJpLm1wNCxbNzIwcF1odHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvZmU4NDEyYjdhYjM1OTE4OTRhMmExNjZlMDIzMjZjNTc6MjAyNDAxMDMwMTpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhka1ZSVHpaRFluTmtWV2xTY0VGallraEJlRVJRT1VFOVBRPT0vMy8xLzIvNy83LzcvdjMwdWoubXA0OmhsczptYW5pZmVzdC5tM3U4IG9yIGh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9mZTg0MTJiN2FiMzU5MTg5NGEyYTE2NmUwMjMyNmM1NzoyMDI0MDEwMzAxOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRrVlJ//_//QEBAQEAhIyMhXl5eUelpEWW5Oa1ZXbFNjRUZqWWtoQmVFUlFPVUU5UFE9PS8zLzEvMi83LzcvNy92MzB1ai5tcDQsWzEwODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9mOWY2MjJhZTM0Yjk5NzhjNGZjZWIzNzVjNWZhYTVmNjoyMDI0MDEwMzAxOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRrVlJUelpEWW5Oa1ZXbFNjRUZqWWtoQmVFUlFPVUU5UFE9PS8zLzEvMi83LzcvNy9hamh5Ny5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2Y5ZjYyMmFlMzRiOTk3OGM0ZmNlYjM3NWM1ZmFhNWY2OjIwMjQwMTAzMDE6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGtWUlR6WkRZbk5rVldsU2NFRmpZa2hCZUVSUU9VRTlQUT09LzMvMS8yLzcvNy83L2FqaHk3Lm1wNCxbMTA4MHAgVWx0cmFdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2Y5ZjYyMmFlMzRiOTk3OGM0ZmNlYjM3NWM1ZmFhNWY2OjIwMjQwMTAzMDE6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGtWUlR6WkRZbk5rVldsU2NFRmpZa2hCZUVSUU9VRTlQUT09LzMvMS8yLzcvNy83L2FqaHk3Lm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvZjlmNjIyYWUzNGI5OTc4YzRmY2ViMzc1YzVmYWE1ZjY6MjAyNDAxMDMwMTpXRVU0VUhCMlRGVnpSM//_//IyMjI14hISMjIUBAGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21//_//X//_//JCQhIUAkJEBeIUAjJCRAl5eIUAjIyEhIyM=SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhka1ZSVHpaRFluTmtWV2xTY0VGallraEJlRVJRT1VFOVBRPT0vMy8xLzIvNy83LzcvYWpoeTcubXA0",
            @"#hWzM2MHBdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2NlNGU5MjU5YjlkZjljOWY3NWRhNDRiMDI2ZDRiOWZiOjIwMjQwMTAzMDE6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGpaVlRGTjFZbk5NS3paTFZEZHNSalpCYzNGNFlWRTlQUT09LzUvNi80LzkvMS8xL3ZjNDI2Lm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvY2U0ZTkyNTliOWRmOWM5Zjc1ZGE0NGIwMjZkNGI5ZmI6MjAyNDAxMDMwMTpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkalpWVEZOMVluTk1LelpMVkRkc1JqWkJjM0Y0WVZFOVBRPT0vNS82LzQvOS8xLzEvdmM0MjYubXA0LFs0ODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9kMDgwZTcyNmQwOTRlZWEzNTNiNzIxYzkyMmEwN2U3NToyMDI0MDEwMzAxOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRqWlZURk4xWW5OTUt6WkxWRGRzUmpaQmMzRjRZVkU5UFE9PS81LzYvNC85LzEvMS9sdDF3ci5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2QwODBlNzI2ZDA5NGVlYTM1M2I3MjFjOTIyYTA3ZTc1OjIwMjQwMTAzMDE6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVG////_//JCQhIUAkJEBeIUAjJCRA_//Xl5eIUAjIyEhIyM=FXbGxlRzl4ZGpaVlRGTjFZbk5NS3paTFZEZHNSalpCYzNGNFlWRTlQUT09LzUvNi80LzkvMS8xL2x0MXdyLm1wNCxbNzIwcF1odHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvYzIyNzc4MWU2NWIzZDNmNTBiODg2MzU1Mzg0NzkwMzQ6MjAyNDAxMDMwMTpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkalpWVEZOMVluTk1LelpMVkRkc1JqWkJjM0Y0WVZFOVBRPT0vNS82LzQvOS8xLzEvMm1vdmMubXA0OmhsczptYW5pZmVzdC5tM3U4IG9yIGh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9jMjI3NzgxZTY1YjNkM2Y1MGI4ODYzNTUzODQ3OTAzNDoyMDI0MDEwMzAxOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRqWlZURk4xWW5OTUt6//_//JCQjISFAIyFAIyM=WkxWRGRzUmpaQmMzRjRZVkU5UFE9PS81LzYvNC85LzEvMS8ybW92Yy5tcDQsWzEwODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9lYjE0OGVjY2I2MmU5OGNhNTdkMDljNzU5NGY4MDcwNzoyMDI0MDEwMzAxOldFVTRVSEIyVEZWelIwaDVRalpNU201//_//IyMjI14hISMjIUBAck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRqWlZURk4xWW5OTUt6WkxWRGRzUmpaQm//_//QEBAQEAhIyMhXl5eMzRjRZVkU5UFE9PS81LzYvNC85LzEvMS80YzE2Zy5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2ViMTQ4ZWNjYjYyZTk4Y2E1N2QwOWM3NTk0ZjgwNzA3OjIwMjQwMTAzMDE6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGpaVlRGTjFZbk5NS3paTFZEZHNSalpCYzNGNFlWRTlQUT09LzUvNi80LzkvMS8xLzRjMTZnLm1wNCxbMTA4MHAgVWx0cmFdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2ViMTQ4ZWNjYjYyZTk4Y2E1N2QwOWM3NTk0ZjgwNzA3OjIwMjQwMTAzMDE6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZGpaVlRGTjFZbk5NS3paTFZEZHNSalpCYzNGNFlWRTlQUT09LzUvNi80LzkvMS8xLzRjMTZnLm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvZWIxNDhlY2NiNjJlOThjYTU3ZDA5Yzc1OTRmODA3MDc6MjAyNDAxMDMwMTpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkalpWVEZOMVluTk1LelpMVkRkc1JqWkJjM0Y0WVZFOVBRPT0vNS82LzQvOS8xLzEvNGMxNmcubXA0",
            @"#hWzM2MHBdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzQ2NGU5N2RhYTEwZWI3MGUxZjAyMDM5ZTc5MGFmMWNmOjIwMjQwMTAzMDI6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5FMk9FSlhWV2x5YTNCVE0xUnNUak4zWms5d2QzYzlQUT09LzcvNC82LzgvMi84L3RoaGJ6Lm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvNDY0ZTk3ZGFhMTBlYjcwZTFmMDIwMzllNzkwYWYxY2Y6MjAyNDAxMDMwMjpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkbkUyT0VKWFZXbHlhM0JUTTFSc//_//Xl5eI//_//QEBAQEAhIyMhXl5eUAjIyEhIyM=1RqTjNaazl3ZDNjOVBRPT0vNy80LzYvOC8yLzgvdGhoYnoubXA0LFs0ODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy9iZTNjODFmMjEyYWVmMTIzYTJiYjRkYWFjOWM4MTRhNDoyMDI0MDEwMzAyOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRuRTJPRUpYVldseWEzQlRNMVJzVGpOM1prOXdkM2M5UFE9PS83LzQvNi84LzIvOC9qNW9tby5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjL2JlM2M4MWYyMTJhZWYxMjNhMmJiNGRhYWM5YzgxNGE0OjIwMjQwMTAz//_//JCQjISFAIyFAIyM=MDI6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5FMk9FSlhWV2x5YTNCVE0xUnNUak4zWms5d2QzYzlQUT09LzcvNC82LzgvMi84L2o1b21vLm1wNCxbNzIwcF1odHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvOTk0N2FhNjM0ZjAzZDUzNzdlYjcxMmIwMWRiMDc5OGQ6MjAyNDAxMDMwMjpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkbkUyT0VKWFZXbHlhM0JUTTFSc1RqTjNaazl3ZDNjOVBRPT0vNy80LzYvOC8yLzgvemNmNHQubXA0OmhsczptYW5pZmVzdC5tM3U4IG9yIGh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy85OTQ3YWE2MzRmMDNkNTM3N2ViNzEyYjAxZGIwNzk4ZDoyMDI0MDEwMzAyOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRuRTJPRUpYVldseWEzQlRNMVJzVGpOM1prOXdkM2M5UFE9PS83LzQvNi84LzIvOC96Y2Y0dC5tcDQsWzEwODBwXWh0dHBzOi8vc3RyZWFtLnZvaWRib29zdC5jYy8xMzhkZjAwNDIxZTZjNmUyM2U1MTUxMDVkZWIxODE1NDoyMDI0MDEwMzAyOldFVTRVSEIyVEZWelIwaDVRalpNU201ck5VVlpPVnBtYlRWQ0sxUTRXbVJtU0c5VWRGQkdSWFpNSzJRNFFtazJPSGhNYmtoTWNHaFRhV2xsZUc5eGRuRTJPRUpYVldseWEzQlRNMVJzVGpOM1prOXdkM2M5UFE9PS83LzQvNi84LzIvOC8wbjVtZi5tcDQ6aGxzOm1hbmlmZXN0Lm0zdTggb3IgaHR0cHM6//_//IyMjI14hISMjIUBALy9zdHJ//_//JCQhIUAkJEBeIUAjJCRAlYW0udm9pZGJvb3N0LmNjLzEzOGRmMDA0MjFlNmM2ZTIzZTUxNTEwNWRlYjE4MTU0OjIwMjQwMTAzMDI6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5FMk9FSlhWV2x5YTNCVE0xUnNUak4zWms5d2QzYzlQUT09LzcvNC82LzgvMi84LzBuNW1mLm1wNCxbMTA4MHAgVWx0cmFdaHR0cHM6Ly9zdHJlYW0udm9pZGJvb3N0LmNjLzEzOGRmMDA0MjFlNmM2ZTIzZTUxNTEwNWRlYjE4MTU0OjIwMjQwMTAzMDI6V0VVNFVIQjJURlZ6UjBoNVFqWk1TbTVyTlVWWk9WcG1iVFZDSzFRNFdtUm1TRzlVZEZCR1JYWk1LMlE0UW1rMk9IaE1ia2hNY0doVGFXbGxlRzl4ZG5FMk9FSlhWV2x5YTNCVE0xUnNUak4zWms5d2QzYzlQUT09LzcvNC82LzgvMi84LzBuNW1mLm1wNDpobHM6bWFuaWZlc3QubTN1OCBvciBodHRwczovL3N0cmVhbS52b2lkYm9vc3QuY2MvMTM4ZGYwMDQyMWU2YzZlMjNlNTE1MTA1ZGViMTgxNTQ6MjAyNDAxMDMwMjpXRVU0VUhCMlRGVnpSMGg1UWpaTVNtNXJOVVZaT1ZwbWJUVkNLMVE0V21SbVNHOVVkRkJHUlhaTUsyUTRRbWsyT0hoTWJraE1jR2hUYVdsbGVHOXhkbkUyT0VKWFZXbHlhM0JUTTFSc1RqTjNaazl3ZDNjOVBRPT0vNy80LzYvOC8yLzgvMG41bWYubXA0"
        };

        [Fact]
        public void PayloadDecode() {
            foreach(var payload in payloads) {
                var decodedPayload = Decode(payload);
                decodedPayload.ToString();
            }
        }

        string Decode(string payload) {
            var fixedPayload = payload;

            if (fixedPayload[0] == '#') {
                fixedPayload = fixedPayload.Substring(2);
            }

            Func<string, int> getTrashLength = (bufferString) => {
                while (true) {
                    var decBuffer = Encoding.UTF8.GetString(Convert.FromBase64String(bufferString.Length % 4 == 0 ? bufferString : bufferString + "=="));
                    if (Regex.IsMatch(decBuffer, "^[!$@#^]*$")) { break; }
                    bufferString = bufferString.Substring(0, bufferString.Length - 2);
                }

                return bufferString.Length;
            };

            while (Regex.IsMatch(fixedPayload, "[/_]{2,}")) {
                var patternStart = Regex.Match(fixedPayload, "[/_]{2,}").Value;
                var idx = fixedPayload.IndexOf(patternStart);

                var nextIdx = fixedPayload.IndexOfAny(['/', '='], idx + patternStart.Length);
                if (nextIdx == -1 || nextIdx == fixedPayload.Length - 1) {
                    var trashLength = getTrashLength(fixedPayload.Substring(idx + patternStart.Length, 64));
                    var pattern = fixedPayload.Substring(idx, trashLength + patternStart.Length);
                    fixedPayload = fixedPayload.Replace(pattern, string.Empty);

                    continue;
                }

                var patternEnd = fixedPayload.Substring(nextIdx, 2);
                if (patternEnd[0] == '=') {
                    var pattern = fixedPayload.Substring(idx, nextIdx - idx + 1);
                    fixedPayload = fixedPayload.Replace(pattern, string.Empty);
                } else if (patternEnd[1] != '/' && patternEnd[1] != '_') {
                    var trashLength = nextIdx - idx - patternStart.Length;
                    var length = patternStart.Length + trashLength + 1 + trashLength;
                    var pattern = fixedPayload.Substring(idx, length);
                    fixedPayload = fixedPayload.Replace(pattern, string.Empty);
                } else {
                    var trashLength = nextIdx - patternStart.Length - idx;
                    if (trashLength > 16) {
                        trashLength = getTrashLength(fixedPayload.Substring(idx + patternStart.Length, 64));
                    }
                    var pattern = fixedPayload.Substring(idx, trashLength + patternStart.Length);
                    fixedPayload = fixedPayload.Replace(pattern, string.Empty);
                }
            }
            
            return Encoding.UTF8.GetString(Convert.FromBase64String(fixedPayload));
        }
    }
}